"use client";

import { useEffect, useState } from "react";
import styles from "./admin-contact-style.module.css"; // —Å–æ–∑–¥–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª —Å—Ç–∏–ª–µ–π

export default function ContactAdminForm() {
  const [contacts, setContacts] = useState([]);
  const [isOpen, setIsOpen] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
  const fetchContacts = async () => {
    try {
      const res = await fetch("/api/contact");
      if (!res.ok) {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤");
      }
      const data = await res.json();
      setContacts(data);
    } catch (error) {
      console.error(error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã");
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–∞
  const deleteContact = async (id) => {
    const confirmed = confirm("–£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç?");
    if (!confirmed) return;

    try {
      const res = await fetch("/api/contact", {
        method: "DELETE",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ id }),
      });

      if (!res.ok) {
        throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞");
      }
      fetchContacts(); // –û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    } catch (error) {
      console.error(error);
      alert("–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç");
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchContacts();
  }, []);

  return (
    <section className={styles.contactSection}>
      <h2 className={styles.title}>–°–ø–∏—Å–æ–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤</h2>
      <div className={styles.contactGrid}>
        {contacts.length > 0 ? (
          contacts.map((contact) => (
            <div key={contact.id} className={styles.card}>
              <div className={styles.cardContent}>
                <h3>–ò–º—è: {contact.name}</h3>
                <p>Email: {contact.email}</p>
                <p>–¢–µ–ª–µ—Ñ–æ–Ω: {contact.phone}</p>
                <p>–°–æ–æ–±—â–µ–Ω–∏–µ: {contact.message}</p>
                <span>–î–∞—Ç–∞: {new Date(contact.createdAt).toLocaleDateString()}</span>
                <button
                  className={styles.deleteButton}
                  onClick={() => deleteContact(contact.id)}
                >
                  üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                </button>
              </div>
            </div>
          ))
        ) : (
          <p>–ö–æ–Ω—Ç–∞–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.</p>
        )}
      </div>
    </section>
  );
}
